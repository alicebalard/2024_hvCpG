
R version 4.2.1 (2022-06-23) -- "Funny-Looking Kid"
Copyright (C) 2022 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> 
> myNthreads=8 ## specify here
> 
> ## Atlas data was preprocessed in 04/S02 and cut in chunks of 500k CpG
> ## Filter: CpGs with at least 20 coverage in at least 3 individuals and at least half of the datasets
> input_dir <- "/SAN/ghlab/epigen/Alice/hvCpG_project/data/WGBS_human/AtlasLoyfer/filtered_chunks/"
> 
> ## Source the function:
> source("/SAN/ghlab/epigen/Alice/hvCpG_project/code/2024_hvCpG/05_hvCpGalgorithm/hvCpG_algorithm_detection_v1.R")
> 
> #########################
> ## test ## **************
> chunk_idx <- 1
> 
> ## Build filename (must match your sprintf format!)
> file_path <- file.path(input_dir, sprintf("filtered_chunk_%04d.rds", chunk_idx))
> 
> ## Load it
> chunk_data <- readRDS(file_path)
> 
> cpgnames <- unique(unlist(sapply(chunk_data, row.names)))
> cpgnames <- cpgnames[order(cpgnames)]
> 
> ## test subset
> # Take first 50,000 CpG names
> cpg_subset <- cpgnames[1:50000]
> chunk_data_subset <- lapply(
+   chunk_data,
+   function(mat) {
+     rows_to_keep <- intersect(rownames(mat), cpg_subset)
+     mat[rows_to_keep, , drop = FALSE]
+   }
+ )
> 
> system.time(runAndSave(my_list_mat = chunk_data_subset, cpgvec = cpg_subset,
+            optimMeth="Nelder-Mead", NCORES=myNthreads, p0=0.95, p1=0.65, 
+ resultDir="/SAN/ghlab/epigen/Alice/hvCpG_project/code/2024_hvCpG/05_hvCpGalgorithm/resultsDir/Atlas/"))
     user    system   elapsed 
68356.131   230.125  8703.200 
> 
> q()
