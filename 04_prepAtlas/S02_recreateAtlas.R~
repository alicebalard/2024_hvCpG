## Recreate Atlas data at the format needed for my algorithm
## Keep coverage 20X or more
coverageMin = 20
## To do: add CpG names, remove rows with less than 3 values
dataset_dir <- "/SAN/ghlab/epigen/Alice/hvCpG_project/data/WGBS_human/AtlasLoyfer/datasets"

# List beta and coverage files, ensure they match by group
beta_files <- list.files(dataset_dir, pattern = "^dataset_.*\\.rds$", full.names = TRUE)
coverage_files <- list.files(dataset_dir, pattern = "^coverage_.*\\.rds$", full.names = TRUE)

# Extract group names (e.g., "Adipocytes", "Blood_Cauc", etc.)
get_group <- function(x) sub("^(dataset|coverage)_(.*)\\.rds$", "\\2", basename(x))
groups <- intersect(get_group(beta_files), get_group(coverage_files))

# Make named vectors for easy matching
beta_files_named <- setNames(beta_files, get_group(beta_files))
coverage_files_named <- setNames(coverage_files, get_group(coverage_files))

my_function <- function(beta_mat, coverage_mat, group) {
  ## Mask beta values where coverage < coverageMin
  beta_mat[coverage_mat < coverageMin] <- NA
  ## Add rownames
  ## TBC
  
  ## Remove rows that have fewer than 3 non-NA values: 
  beta_mat_filtered <- mat1[rowSums(!is.na(beta_mat)) >= 3, , drop = FALSE]
  return(beta_mat_filtered)
}

result_list <- lapply(groups, function(grp) {
  beta_mat <- readRDS(beta_files_named[[grp]])
  coverage_mat <- readRDS(coverage_files_named[[grp]])
  my_function(beta_mat, coverage_mat, grp)
})
names(result_list) <- groups

